Класс "Абстрактный смартфон", у которого есть операция "позвонить".
От него наследуем "Смартфон Apple", который наследует операцию "позвонить", но также требует, например, наличия сим-карты в устройстве.

В результате, на операцию "позвонить" в классе "Смартфон Apple" накладывается дополнительное предусловие - наличие сим-карты в устройстве,
это нарушает LSP, так как объект класса "Смартфон Apple" невозможно использовать везде, где можно использовать объект класса "Абстрактный смартфон".

Другой пример:

Есть Абстрактный класс BankAccount с методом withdraw(), который имеет предусловие - "на счету достаточно средств для снятия указанной суммы." и постусловие - "сумма на счету должна уменьшиться на указанную сумму."

И класс SavingAccount, который наследуется от BankAccount и имеет свои предусловия и постусловия для метода withdraw(). Предусловие у SavingAccount - "нельзя снимать сумму больше, чем находится на счету и не менее 100 рублей должно оставаться на счету после снятия." Постусловие такое же как у BankAccount.

Если наследоваться SavingAccount от BankAccount, нам придется усиливать предусловие, что не корректно.
Правильно будет наследовать BankAccount от SavingAccount, мы ослабим предусловие (т.к. в SavingAccount более строгие ограничения), и целиком наследуем постусловие.
